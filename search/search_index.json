{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Assistant Harvest Time Tracker","text":"<p>Custom component to allow you to interact with your Harvest account. </p> <p>This integration is in no way affiliated with Harvest.</p>"},{"location":"#how-to-install","title":"How to install","text":"<p>There are multiple ways of installing the integration.</p>"},{"location":"#hacs","title":"HACS","text":"<p>This integration can be installed directly via HACS. To install:</p> <ul> <li>Add the repository to your HACS installation</li> <li>Click <code>Download</code></li> </ul>"},{"location":"#manual","title":"Manual","text":"<p>You should take the latest published release. The current state of <code>develop</code> will be in flux and therefore possibly subject to change.</p> <p>To install, place the contents of <code>custom_components</code> into the <code>&lt;config directory&gt;/custom_components</code> folder of your Home Assistant installation. Once installed, don't forget to restart your home assistant instance for the integration to be picked up.</p>"},{"location":"#how-to-setup","title":"How to setup","text":"<p>Please follow the setup guide to setup your initial account. This will include a few sensors be default depending on your account.</p>"},{"location":"#entities","title":"Entities","text":"<p>The full list of entities that will be created once you've setup your account can be found in the entities section.</p>"},{"location":"#services","title":"Services","text":"<p>The full list of available services can be found here.</p>"},{"location":"#faq","title":"FAQ","text":"<p>Before raising anything, please read through the faq. If you have found a bug or have a feature request please raise it using the appropriate report template.</p>"},{"location":"#sponsorship","title":"Sponsorship","text":"<p>Please see the sponsorship page for more information.</p>"},{"location":"blueprints/","title":"Blueprints","text":"<p>Blueprints are an excellent way to get you up and running with the integration quickly. They can also be used as a guide for setting up new automations which you can tailor to your needs. </p>"},{"location":"blueprints/#rates","title":"Rates","text":""},{"location":"blueprints/#add-hour-based-entries-based-on-calendar-entries-using-ai","title":"Add hour based entries based on calendar entries using AI","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically adds an entry to a correct task, based on AI, when a calendar entry ends based on the calendar summary. Because this is using AI, it might not pick the best option. This has been tested with ChatGPT.</p>"},{"location":"entities/","title":"Entities","text":"<p>The following entities are available when setting up your account.</p>"},{"location":"entities/#daily-hours","title":"Daily Hours","text":"<p><code>sensor.harvest_time_tracker_{ACCOUNT_ID/NAME}_hours_today</code></p> <p>This sensor will present the total hours for today for the user associated with the configured API key.</p> Attribute Name type Note <code>account_id</code> <code>string</code> The id of the account this sensor is for <code>entries</code> <code>list</code> The entries that added up to todays total <p>Each entry has the following attributes</p> Attribute Name type Note <code>id</code> <code>string</code> The id of the entry <code>client_id</code> <code>string</code> The id of the client the entry belongs to <code>client_name</code> <code>string</code> The name of the client the entry belongs to <code>project_id</code> <code>string</code> The id of the project this sensor is for <code>project_name</code> <code>string</code> The name of the project the entry belongs to <code>task_id</code> <code>string</code> The id of the task the entry belongs to <code>task_name</code> <code>string</code> The name of the task the entry belongs to <code>hours</code> <code>float</code> The hours logged for the entry <code>start</code> <code>datetime</code> The start date of the entry. This will always have a time of midnight <code>end</code> <code>datetime</code> The end date of the entry. This will always have a time of midnight. If this is for the same day, this will have the same value as <code>start</code> <code>notes</code> <code>string</code> Any notes attached to the entry"},{"location":"entities/#weekly-hours","title":"Weekly Hours","text":"<p><code>sensor.harvest_time_tracker_{ACCOUNT_ID/NAME}_hours_week</code></p> <p>This sensor will present the total hours for the week for the user associated with the configured API key. The week will start from the day you elected as your week start when configuring the integration.</p> Attribute Name type Note <code>account_id</code> <code>string</code> The id of the account this sensor is for <code>entries</code> <code>list</code> The entries that added up to todays total <p>Each entry has the following attributes</p> Attribute Name type Note <code>id</code> <code>string</code> The id of the entry <code>client_id</code> <code>string</code> The id of the client the entry belongs to <code>client_name</code> <code>string</code> The name of the client the entry belongs to <code>project_id</code> <code>string</code> The id of the project this sensor is for <code>project_name</code> <code>string</code> The name of the project the entry belongs to <code>task_id</code> <code>string</code> The id of the task the entry belongs to <code>task_name</code> <code>string</code> The name of the task the entry belongs to <code>hours</code> <code>float</code> The hours logged for the entry <code>start</code> <code>datetime</code> The start date of the entry. This will always have a time of midnight <code>end</code> <code>datetime</code> The end date of the entry. This will always have a time of midnight. If this is for the same day, this will have the same value as <code>start</code> <code>notes</code> <code>string</code> Any notes attached to the entry"},{"location":"entities/#default-task","title":"Default Task","text":"<p><code>select.harvest_time_tracker_{ACCOUNT_ID/NAME}_default_task</code></p> <p>This select sensor is used to select a default assigned task which can then be used in automations (see service example).</p> Attribute Name type Note <code>account_id</code> <code>string</code> The id of the account this sensor is for <code>client_id</code> <code>string</code> The id of the client that the selected task belongs to <code>client_name</code> <code>string</code> The name of the client that the selected task belongs to <code>project_id</code> <code>string</code> The id of the project that the selected task belongs to <code>project_name</code> <code>string</code> The name of the project that the selected task belongs to <code>task_id</code> <code>string</code> The id of the selected task <code>task_name</code> <code>string</code> The name of the selected task"},{"location":"entities/#tasks","title":"Tasks","text":"<p><code>event.harvest_time_tracker_{ACCOUNT_ID/NAME}_tasks</code></p> <p>This event sensor is used to see all of your assigned tasks and when they were last updated.</p> Attribute Name type Note <code>account_id</code> <code>string</code> The id of the account this sensor is for <code>tasks</code> <code>list</code> The list of tasks assigned to the user <p>For each task, the following attributes are available</p> Attribute Name type Note <code>id</code> <code>string</code> The id of the task <code>name</code> <code>string</code> The name of the task <code>project_id</code> <code>string</code> The id of the project the task belongs to <code>project_name</code> <code>string</code> The name of the project the task belongs to <code>client_id</code> <code>string</code> The id of the client the task belongs to <code>client_name</code> <code>string</code> The name of the client the task belongs to"},{"location":"events/","title":"Events","text":"<p>The following events are fired as part of this integration</p>"},{"location":"events/#harvest-tasks-updated","title":"Harvest Tasks Updated","text":"<p><code>harvest_time_tracker_tasks_updated</code></p> <p>This event is fired when the harvest time tracker tasks have been retrieved from the API for a given account. This will fire regardless if the list of tasks has changed.</p> Attribute Name type Note <code>account_id</code> <code>string</code> The id of the account this sensor is for <code>tasks</code> <code>list</code> The list of tasks assigned to the user <p>For each task, the following attributes are available</p> Attribute Name type Note <code>id</code> <code>string</code> The id of the task <code>name</code> <code>string</code> The name of the task <code>project_id</code> <code>string</code> The id of the project the task belongs to <code>project_name</code> <code>string</code> The name of the project the task belongs to <code>client_id</code> <code>string</code> The id of the client the task belongs to <code>client_name</code> <code>string</code> The name of the client the task belongs to"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-do-i-increase-the-logs-for-the-integration","title":"How do I increase the logs for the integration?","text":"<p>If you are having issues, it would be helpful to include Home Assistant logs as part of any raised issue. This can be done by following the instructions outlined by Home Assistant.</p> <p>You should run these logs for about a day and then include the contents in the issue. Please be sure to remove any personal identifiable information from the logs before including them.</p>"},{"location":"services/","title":"Services","text":""},{"location":"services/#harvest_time_trackeradd_time_with_hours","title":"harvest_time_tracker.add_time_with_hours","text":"<p>Adds a new time entry specified with hours. You should only use this method to create time entries when your account is configured to track time via duration.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the sensor for the account the time entry will be added to. This should be your day or week sensor <code>data.project_id</code> <code>no</code> The id of the project the entry should be logged against <code>data.task_id</code> <code>no</code> The id of the task the entry should be logged against <code>data.date</code> <code>no</code> The date the entry is for. This should be in the format <code>YYYY-MM-DD</code> <code>data.hours</code> <code>no</code> The hours to be logged in the entry <code>data.notes</code> <code>yes</code> The optional notes to add to the entry"},{"location":"services/#automation-example","title":"Automation Example","text":"<p>Below is an example of adding an entry to a specific task when a calendar event with certain text ends. The entry has the hours of the calendar event. If the calendar entry is for something else, we add an entry to our elected default task.</p> <p>Info</p> <p>If you're feeling adventurous, you could use a blueprint which adds entries automatically based on calendar entries utilising AI.</p> <pre><code>automations:\n  - alias: Work - Timesheet\n    trigger:\n    - platform: calendar\n      event: end\n      entity_id: calendar.work\n    condition:\n    - condition: state\n      entity_id: group.is_working\n      state: 'on'\n    action:\n    - choose:\n      - conditions:\n        - condition: template\n          value_template: &gt;\n            {{ \"Client X\" in trigger.calendar_event.summary }}\n        sequence:\n        - service: harvest_time_tracker.add_time_with_hours\n          data:\n            project_id: 1234\n            task_id: 5678\n            date: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%Y-%m-%d\") }}\n            hours: &gt;\n              {{ ((trigger.calendar_event.end | as_datetime | as_timestamp) - (trigger.calendar_event.start | as_datetime | as_timestamp)) / 60 / 60 }}\n            notes: &gt;\n              {{ trigger.calendar_event.summary }}\n          target:\n            entity_id: sensor.harvest_time_tracker_XXX_hours_today\n      default:\n        - service: harvest_time_tracker.add_time_with_hours\n          data:\n            project_id: &gt;\n              {{ state_attr('select.harvest_time_tracker_XXX_default_task', 'project_id') }}\n            task_id: &gt;\n              {{ state_attr('select.harvest_time_tracker_XXX_default_task', 'task_id') }}\n            date: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%Y-%m-%d\") }}\n            hours: &gt;\n              {{ ((trigger.calendar_event.end | as_datetime | as_timestamp) - (trigger.calendar_event.start | as_datetime | as_timestamp)) / 60 / 60 }}\n            notes: &gt;\n              {{ trigger.calendar_event.summary }}\n          target:\n            entity_id: sensor.harvest_time_tracker_XXX_hours_today\n</code></pre>"},{"location":"services/#harvest_time_trackeradd_time_with_start_end_times","title":"harvest_time_tracker.add_time_with_start_end_times","text":"<p>Adds a new time entry specified with start/end times. You should only use this method to create time entries when your account is configured to track time via start and end time.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the sensor for the account the time entry will be added to. This should be your day or week sensor <code>data.project_id</code> <code>no</code> The id of the project the entry should be logged against <code>data.task_id</code> <code>no</code> The id of the task the entry should be logged against <code>data.date</code> <code>no</code> The date the entry is for. This should be in the format <code>YYYY-MM-DD</code> <code>data.start_time</code> <code>no</code> The time the entry started <code>data.end_time</code> <code>no</code> The time the entry ended <code>data.notes</code> <code>yes</code> The optional notes to add to the entry"},{"location":"services/#automation-example_1","title":"Automation Example","text":"<p>Below is an example of adding an entry to a specific task when a calendar event with certain text ends. The entry has the start/end of the calendar event. If the calendar entry is for something else, we add an entry to our elected default task.</p> <pre><code>automations:\n  - alias: Work - Timesheet\n    trigger:\n    - platform: calendar\n      event: end\n      entity_id: calendar.work\n    condition:\n    - condition: state\n      entity_id: group.is_working\n      state: 'on'\n    action:\n    - choose:\n      - conditions:\n        - condition: template\n          value_template: &gt;\n            {{ \"Client X\" in trigger.calendar_event.summary }}\n        sequence:\n        - service: harvest_time_tracker.add_time_with_start_end_times\n          data:\n            project_id: 1234\n            task_id: 5678\n            date: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%Y-%m-%d\") }}\n            start_time: &gt;\n              {{ (trigger.calendar_event.start | as_datetime).strftime(\"%H:%M\") }}\n            end_time: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%H:%M\") }}\n            notes: &gt;\n              {{ trigger.calendar_event.summary }}\n          target:\n            entity_id: sensor.harvest_time_tracker_XXX_hours_today\n      default:\n        - service: harvest_time_tracker.add_time_with_start_end_times\n          data:\n            project_id: &gt;\n              {{ state_attr('select.harvest_time_tracker_XXX_default_task', 'project_id') }}\n            task_id: &gt;\n              {{ state_attr('select.harvest_time_tracker_XXX_default_task', 'task_id') }}\n            date: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%Y-%m-%d\") }}\n            start_time: &gt;\n              {{ (trigger.calendar_event.start | as_datetime).strftime(\"%H:%M\") }}\n            end_time: &gt;\n              {{ (trigger.calendar_event.end | as_datetime).strftime(\"%H:%M\") }}\n            notes: &gt;\n              {{ trigger.calendar_event.summary }}\n          target:\n            entity_id: sensor.harvest_time_tracker_XXX_hours_today\n</code></pre>"},{"location":"setup/","title":"Setup","text":"<p>Setup is done entirely via the integration UI.</p> <p>You can do this for as many accounts as you would like.</p>"},{"location":"setup/#name","title":"Name","text":"<p>A friendly name to help identify the account. This is optional, and if not supplied the <code>account_id</code> will be used.</p>"},{"location":"setup/#personal-access-token","title":"Personal access token","text":"<p>This can be obtained on the Harvest website.</p>"},{"location":"setup/#account-id","title":"Account Id","text":"<p>The id of the account this setup is for. This is associated with your personal access token.</p>"},{"location":"setup/#start-of-the-week","title":"Start of the week","text":"<p>This is the day that determines the start of the week for the account. This will be used in weekly calculations.</p>"},{"location":"setup/#entities","title":"Entities","text":"<p>The full list of entities can be found in the entities section.</p>"},{"location":"sponsorship/","title":"Sponsorship","text":"<p>If you are enjoying the integration, why not if possible, make a one off or monthly GitHub sponsorship.</p>"}]}